name: Linter

# Controls when the workflow will run
on:
  pull_request:
    branches: [ main ]

env:
  PHP_VERSION: '8.0'
  COMPOSER_VERSION: '2.3'
  NODE_VERSION: 14
  PROJECT_PATH: './'
  THEME_PATH: './'

jobs:
  phpcs:
    name: PHP Coding Standards
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.PROJECT_PATH }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache # use this to check for `cache-hit` ==> if: steps.composer-cache.outputs.cache-hit != 'true'
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer dependencies
        # https://github.com/marketplace/actions/cache
        uses: actions/cache@v2
        env:
          composer-cache-name: cache-vendor
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ env.composer-cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.composer-cache-name }}-

      - name: Setup PHP & Composer Environment
        # https://github.com/marketplace/actions/setup-php-action
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ env.PHP_VERSION }}"
          tools: "composer:${{ env.COMPOSER_VERSION }}"

      - name: Environment Check
        run: php -v && composer --version

      - name: Install Composer Dependencies
        run: composer install --prefer-dist

      - name: Run PHP_CodeSniffer
        run: composer run-script phpcs